Q = 2  # number of qubits
L = 2  # number of fraxis layer
W = 10  # number of quantum node
N = 30  # number of training data size
M = 30  # number of testing data size
U = 1  # number of update

titanicで以下の4通り
1. 初期化: 固定　更新順序: 順番通り
2. 初期化: 固定　更新順序: ランダム
3. 初期化: ランダム　更新順序: 順番通り
4. 初期化: ランダム　更新順序: ランダム
を試した。

4の方法の精度が最も良くなり、パラメータの初期値と更新順序をランダムにすると精度が良くなることを確認できた。
4の方法で実行時間も最も短くなったが、これは偶然なのかどうか分からない。
小さなサイズで試しただけなので、異なるサイズで実験する必要がある。
##########################################################
1. 初期化: 固定　更新順序: 順番通り
----------------------------------------------------------
Using MNIST
order_layer:  [(0, 0), (0, 1), (1, 0), (1, 1)]
Max value of eigenvalues:  9.09896159950687
ACC_train:  0.6 
SCORE_train:  0.30503333333333327
params
 [[[ 0.645771   -0.29915382 -0.70248616]
  [ 0.          0.          1.        ]]

 [[ 0.          0.          1.        ]
  [ 0.          0.          1.        ]]]
Max value of eigenvalues:  13.462174998286553
ACC_train:  0.8 
SCORE_train:  0.4659999999999999
params
 [[[ 0.645771   -0.29915382 -0.70248616]
  [ 0.2034882  -0.36642009  0.90792559]]

 [[ 0.          0.          1.        ]
  [ 0.          0.          1.        ]]]
Max value of eigenvalues:  15.0194911779422
ACC_train:  0.7 
SCORE_train:  0.5079666666666659
params
 [[[ 0.645771   -0.29915382 -0.70248616]
  [ 0.2034882  -0.36642009  0.90792559]]

 [[-0.04668768 -0.17982435  0.98259018]
  [ 0.          0.          1.        ]]]
Max value of eigenvalues:  15.410448320483548
ACC_train:  0.7666666666666667 
SCORE_train:  0.5013666666666661
params
 [[[ 0.645771   -0.29915382 -0.70248616]
  [ 0.2034882  -0.36642009  0.90792559]]

 [[-0.04668768 -0.17982435  0.98259018]
  [-0.71574934 -0.69414628  0.07657553]]]
ACC_test:  0.7666666666666667 
SCORE_test:  0.41199999999999964
388.71312403678894
_______________NEW________________ Iteration:  0
Implementation time :  388.72877502441406
##########################################################
2. 初期化: 固定　更新順序: ランダム
----------------------------------------------------------
Using MNIST
order_layer:  [(1, 0), (1, 1), (0, 1), (0, 0)]
Max value of eigenvalues:  15.239796838650335
ACC_train:  0.7666666666666667 
SCORE_train:  0.5039666666666662
params
 [[[ 0.          0.          1.        ]
  [ 0.          0.          1.        ]]

 [[-0.35281363  0.38623525  0.85225869]
  [ 0.          0.          1.        ]]]
Max value of eigenvalues:  15.246636701419872
ACC_train:  0.7666666666666667 
SCORE_train:  0.5115333333333331
params
 [[[ 0.          0.          1.        ]
  [ 0.          0.          1.        ]]

 [[-0.35281363  0.38623525  0.85225869]
  [ 0.95811803  0.04199224 -0.28327811]]]
Max value of eigenvalues:  15.240962536229665
ACC_train:  0.8333333333333334 
SCORE_train:  0.5214999999999999
params
 [[[ 0.          0.          1.        ]
  [ 0.09006972 -0.08605243  0.99221088]]

 [[-0.35281363  0.38623525  0.85225869]
  [ 0.95811803  0.04199224 -0.28327811]]]
Max value of eigenvalues:  18.380037068053294
ACC_train:  0.7666666666666667 
SCORE_train:  0.6105666666666665
params
 [[[-0.31362015  0.1795782   0.93241304]
  [ 0.09006972 -0.08605243  0.99221088]]

 [[-0.35281363  0.38623525  0.85225869]
  [ 0.95811803  0.04199224 -0.28327811]]]
ACC_test:  0.9 
SCORE_test:  0.6117333333333331
351.7434937953949
_______________NEW________________ Iteration:  0
Implementation time :  351.75241780281067
##########################################################
3. 初期化: ランダム　更新順序: 順番通り
----------------------------------------------------------
Using MNIST
order_layer:  [(0, 0), (0, 1), (1, 0), (1, 1)]
Max value of eigenvalues:  12.55694655566161
ACC_train:  0.6333333333333333 
SCORE_train:  0.4114333333333326
params
 [[[-0.07952208  0.9426212   0.32425533]
  [ 0.57642323  0.44817766  0.68328109]]

 [[ 0.31618138  0.64435616  0.69630056]
  [ 0.37356329  0.77132859  0.51526951]]]
Max value of eigenvalues:  18.72986760677887
ACC_train:  0.8 
SCORE_train:  0.6223999999999995
params
 [[[-0.07952208  0.9426212   0.32425533]
  [-0.85226389 -0.03488532 -0.52194758]]

 [[ 0.31618138  0.64435616  0.69630056]
  [ 0.37356329  0.77132859  0.51526951]]]
Max value of eigenvalues:  19.82582908191229
ACC_train:  0.8 
SCORE_train:  0.6510333333333326
params
 [[[-0.07952208  0.9426212   0.32425533]
  [-0.85226389 -0.03488532 -0.52194758]]

 [[-0.29975292 -0.5119226  -0.8050363 ]
  [ 0.37356329  0.77132859  0.51526951]]]
Max value of eigenvalues:  19.95244863168863
ACC_train:  0.8 
SCORE_train:  0.655966666666666
params
 [[[-0.07952208  0.9426212   0.32425533]
  [-0.85226389 -0.03488532 -0.52194758]]

 [[-0.29975292 -0.5119226  -0.8050363 ]
  [-0.58009729 -0.62862316 -0.51799619]]]
ACC_test:  0.6 
SCORE_test:  0.3245333333333328
328.07709431648254
_______________NEW________________ Iteration:  0
##########################################################
4. 初期化: ランダム　更新順序: ランダム
----------------------------------------------------------
Using MNIST
order_layer:  [(1, 1), (1, 0), (0, 1), (0, 0)]
Max value of eigenvalues:  9.925898109565981
ACC_train:  0.6 
SCORE_train:  0.3334333333333332
params
 [[[ 0.50607888  0.65949951  0.55582782]
  [ 0.57642323  0.44817766  0.68328109]]

 [[ 0.31618138  0.64435616  0.69630056]
  [-0.97113277 -0.18998524 -0.14424543]]]
Max value of eigenvalues:  18.562249032557176
ACC_train:  0.7333333333333333 
SCORE_train:  0.6063666666666663
params
 [[[ 0.50607888  0.65949951  0.55582782]
  [ 0.57642323  0.44817766  0.68328109]]

 [[-0.78093828 -0.53503918 -0.32228633]
  [-0.97113277 -0.18998524 -0.14424543]]]
Max value of eigenvalues:  20.61055661965983
ACC_train:  0.7333333333333333 
SCORE_train:  0.6854333333333326
params
 [[[ 0.50607888  0.65949951  0.55582782]
  [-0.82504899 -0.16836426 -0.53939563]]

 [[-0.78093828 -0.53503918 -0.32228633]
  [-0.97113277 -0.18998524 -0.14424543]]]
Max value of eigenvalues:  31.083096601883398
ACC_train:  0.8666666666666667 
SCORE_train:  1.0427999999999988
params
 [[[-0.83038546 -0.55713708 -0.00763298]
  [-0.82504899 -0.16836426 -0.53939563]]

 [[-0.78093828 -0.53503918 -0.32228633]
  [-0.97113277 -0.18998524 -0.14424543]]]
ACC_test:  0.8 
SCORE_test:  0.8168666666666657
270.3157880306244
_______________NEW________________ Iteration:  0
Implementation time :  270.3405339717865